FROM amazonlinux:2

# defaultインストール
RUN yum update -y
RUN yum install -y unzip git
# PHPインストール
RUN amazon-linux-extras install -y php7.3
RUN yum install -y php-cli php-xml php-json php-mbstring php-process php-common php-fpm php-zip php-mysqlnd

# Composerインストール
RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
#RUN php -r "if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
RUN php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
RUN php composer-setup.php
RUN php -r "unlink('composer-setup.php');"
# RUN curl -sS https://getcomposer.org/installer | php
RUN mv composer.phar /usr/local/bin/composer
# RUN mkdir -p /var/www/html
# RUN chmod -R 777 /var/www/html

# 環境変数設定
ENV COMPOSER_ALLOW_SUPERUSER 1
# ENV COMPOSER_HOME "/opt/composer"
# ENV PATH "$PATH:/opt/composer/vendor/bin"
ENV PATH "~/.config/composer/vendor/bin:$PATH"

# Laravelインストール
# RUN composer global require "laravel/installer"

# Laravelプロジェクト作成
WORKDIR /var/www/html
# RUN laravel new tomita_project
RUN composer create-project --prefer-dist laravel/laravel tomita_project
# RUN git clone clone_url

WORKDIR /var/www/html/tomita_project
RUN composer install
RUN composer update
RUN php artisan key:generate
RUN chmod -R 777 bootstrap/cache
RUN chmod -R 777 storage
# CMD ["php","artisan","key:generate"]
# CMD ["php","artisan","serve","--host","0.0.0.0"]

# ポートを公開
EXPOSE 9000
